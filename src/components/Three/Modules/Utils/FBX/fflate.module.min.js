/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
*/
const t = {}; const n = Uint8Array; const r = Uint16Array; const i = Uint32Array; const e = new n([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0]); const o = new n([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0]); const a = new n([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); const f = function (t, n) { for (var e = new r(31), o = 0; o < 31; ++o)e[o] = n += 1 << t[o - 1]; const a = new i(e[30]); for (o = 1; o < 30; ++o) for (let f = e[o]; f < e[o + 1]; ++f)a[f] = f - e[o] << 5 | o; return [e, a]; }; const s = f(e, 2); const u = s[0]; const h = s[1]; u[28] = 258, h[258] = 28; for (var c = f(o, 0), l = c[0], p = c[1], v = new r(32768), d = 0; d < 32768; ++d) { let g = (43690 & d) >>> 1 | (21845 & d) << 1; g = (61680 & (g = (52428 & g) >>> 2 | (13107 & g) << 2)) >>> 4 | (3855 & g) << 4, v[d] = ((65280 & g) >>> 8 | (255 & g) << 8) >>> 1; } const y = function (t, n, i) { for (var e = t.length, o = 0, a = new r(n); o < e; ++o)++a[t[o] - 1]; let f; const s = new r(n); for (o = 0; o < n; ++o)s[o] = s[o - 1] + a[o - 1] << 1; if (i) { f = new r(1 << n); const u = 15 - n; for (o = 0; o < e; ++o) if (t[o]) for (let h = o << 4 | t[o], c = n - t[o], l = s[t[o] - 1]++ << c, p = l | (1 << c) - 1; l <= p; ++l)f[v[l] >>> u] = h; } else for (f = new r(e), o = 0; o < e; ++o)f[o] = v[s[t[o] - 1]++] >>> 15 - t[o]; return f; }; const w = new n(288); for (d = 0; d < 144; ++d)w[d] = 8; for (d = 144; d < 256; ++d)w[d] = 9; for (d = 256; d < 280; ++d)w[d] = 7; for (d = 280; d < 288; ++d)w[d] = 8; const m = new n(32); for (d = 0; d < 32; ++d)m[d] = 5; const b = y(w, 9, 0); const x = y(w, 9, 1); const z = y(m, 5, 0); const S = y(m, 5, 1); const k = function (t) { for (var n = t[0], r = 1; r < t.length; ++r)t[r] > n && (n = t[r]); return n; }; const M = function (t, n, r) { const i = n / 8 >> 0; return (t[i] | t[i + 1] << 8) >>> (7 & n) & r; }; const C = function (t, n) { const r = n / 8 >> 0; return (t[r] | t[r + 1] << 8 | t[r + 2] << 16) >>> (7 & n); }; const U = function (t) { return (t / 8 >> 0) + (7 & t && 1); }; const A = function (t, e, o) { (e == null || e < 0) && (e = 0), (o == null || o > t.length) && (o = t.length); const a = new (t instanceof r ? r : t instanceof i ? i : n)(o - e); return a.set(t.subarray(e, o)), a; }; const O = function (t, r, i) { const f = t.length; const s = !r || i; const h = !i || i.i; i || (i = {}), r || (r = new n(3 * f)); const c = function (t) { const i = r.length; if (t > i) { const e = new n(Math.max(2 * i, t)); e.set(r), r = e; } }; let p = i.f || 0; let v = i.p || 0; let d = i.b || 0; let g = i.l; let w = i.d; let { m } = i; let b = i.n; const z = 8 * f; do { if (!g) { i.f = p = M(t, v, 1); const O = M(t, v + 1, 3); if (v += 3, !O) { const T = t[(H = U(v) + 4) - 4] | t[H - 3] << 8; const D = H + T; if (D > f) { if (h) throw 'unexpected EOF'; break; }s && c(d + T), r.set(t.subarray(H, D), d), i.b = d += T, i.p = v = 8 * D; continue; } if (O == 1)g = x, w = S, m = 9, b = 5; else { if (O != 2) throw 'invalid block type'; const F = M(t, v, 31) + 257; const E = M(t, v + 10, 15) + 4; const I = F + M(t, v + 5, 31) + 1; v += 14; for (var Z = new n(I), j = new n(19), G = 0; G < E; ++G)j[a[G]] = M(t, v + 3 * G, 7); v += 3 * E; const L = k(j); const R = (1 << L) - 1; if (!h && v + I * (L + 7) > z) break; const B = y(j, L, 1); for (G = 0; G < I;) { var H; const P = B[M(t, v, R)]; if (v += 15 & P, (H = P >>> 4) < 16)Z[G++] = H; else { var W = 0; let Y = 0; for (H == 16 ? (Y = 3 + M(t, v, 3), v += 2, W = Z[G - 1]) : H == 17 ? (Y = 3 + M(t, v, 7), v += 3) : H == 18 && (Y = 11 + M(t, v, 127), v += 7); Y--;)Z[G++] = W; } } const q = Z.subarray(0, F); var J = Z.subarray(F); m = k(q), b = k(J), g = y(q, m, 1), w = y(J, b, 1); } if (v > z) throw 'unexpected EOF'; }s && c(d + 131072); for (let K = (1 << m) - 1, N = (1 << b) - 1, Q = m + b + 18; h || v + Q < z;) { const V = (W = g[C(t, v) & K]) >>> 4; if ((v += 15 & W) > z) throw 'unexpected EOF'; if (!W) throw 'invalid length/literal'; if (V < 256)r[d++] = V; else { if (V == 256) { g = null; break; } let X = V - 254; if (V > 264) { var $ = e[G = V - 257]; X = M(t, v, (1 << $) - 1) + u[G], v += $; } const _ = w[C(t, v) & N]; const tt = _ >>> 4; if (!_) throw 'invalid distance'; v += 15 & _; J = l[tt]; if (tt > 3) { $ = o[tt]; J += C(t, v) & (1 << $) - 1, v += $; } if (v > z) throw 'unexpected EOF'; s && c(d + 131072); for (var nt = d + X; d < nt; d += 4)r[d] = r[d - J], r[d + 1] = r[d + 1 - J], r[d + 2] = r[d + 2 - J], r[d + 3] = r[d + 3 - J]; d = nt; } }i.l = g, i.p = v, i.b = d, g && (p = 1, i.m = m, i.d = w, i.n = b); } while (!p);return d == r.length ? r : A(r, 0, d); }; const T = function (t, n, r) { r <<= 7 & n; const i = n / 8 >> 0; t[i] |= r, t[i + 1] |= r >>> 8; }; const D = function (t, n, r) { r <<= 7 & n; const i = n / 8 >> 0; t[i] |= r, t[i + 1] |= r >>> 8, t[i + 2] |= r >>> 16; }; const F = function (t, i) {
  for (var e = [], o = 0; o < t.length; ++o)t[o] && e.push({ s: o, f: t[o] }); const a = e.length; const f = e.slice(); if (!a) return [new n(0), 0]; if (a == 1) { const s = new n(e[0].s + 1); return s[e[0].s] = 1, [s, 1]; }e.sort(((t, n) => { return t.f - n.f; })), e.push({ s: -1, f: 25001 }); let u = e[0]; let h = e[1]; let c = 0; let l = 1; let p = 2; for (e[0] = {
    s: -1, f: u.f + h.f, l: u, r: h,
  }; l != a - 1;) {
    u = e[e[c].f < e[p].f ? c++ : p++], h = e[c != l && e[c].f < e[p].f ? c++ : p++], e[l++] = {
      s: -1, f: u.f + h.f, l: u, r: h,
    };
  } let v = f[0].s; for (o = 1; o < a; ++o)f[o].s > v && (v = f[o].s); const d = new r(v + 1); let g = E(e[l - 1], d, 0); if (g > i) { o = 0; let y = 0; const w = g - i; const m = 1 << w; for (f.sort(((t, n) => { return d[n.s] - d[t.s] || t.f - n.f; })); o < a; ++o) { const b = f[o].s; if (!(d[b] > i)) break; y += m - (1 << g - d[b]), d[b] = i; } for (y >>>= w; y > 0;) { const x = f[o].s; d[x] < i ? y -= 1 << i - d[x]++ - 1 : ++o; } for (;o >= 0 && y; --o) { const z = f[o].s; d[z] == i && (--d[z], ++y); }g = i; } return [new n(d), g];
}; var E = function (t, n, r) { return t.s == -1 ? Math.max(E(t.l, n, r + 1), E(t.r, n, r + 1)) : n[t.s] = r; }; const I = function (t) { for (var n = t.length; n && !t[--n];);for (var i = new r(++n), e = 0, o = t[0], a = 1, f = function (t) { i[e++] = t; }, s = 1; s <= n; ++s) if (t[s] == o && s != n)++a; else { if (!o && a > 2) { for (;a > 138; a -= 138)f(32754); a > 2 && (f(a > 10 ? a - 11 << 5 | 28690 : a - 3 << 5 | 12305), a = 0); } else if (a > 3) { for (f(o), --a; a > 6; a -= 6)f(8304); a > 2 && (f(a - 3 << 5 | 8208), a = 0); } for (;a--;)f(o); a = 1, o = t[s]; } return [i.subarray(0, e), n]; }; const Z = function (t, n) { for (var r = 0, i = 0; i < n.length; ++i)r += t[i] * n[i]; return r; }; const j = function (t, n, r) { const i = r.length; const e = U(n + 2); t[e] = 255 & i, t[e + 1] = i >>> 8, t[e + 2] = 255 ^ t[e], t[e + 3] = 255 ^ t[e + 1]; for (let o = 0; o < i; ++o)t[e + o + 4] = r[o]; return 8 * (e + 4 + i); }; const G = function (t, n, i, f, s, u, h, c, l, p, v) { T(n, v++, i), ++s[256]; for (var d = F(s, 15), g = d[0], x = d[1], S = F(u, 15), k = S[0], M = S[1], C = I(g), U = C[0], A = C[1], O = I(k), E = O[0], G = O[1], L = new r(19), R = 0; R < U.length; ++R)L[31 & U[R]]++; for (R = 0; R < E.length; ++R)L[31 & E[R]]++; for (var B = F(L, 7), H = B[0], P = B[1], W = 19; W > 4 && !H[a[W - 1]]; --W);let Y; let q; let J; let K; const N = p + 5 << 3; const Q = Z(s, w) + Z(u, m) + h; const V = Z(s, g) + Z(u, k) + h + 14 + 3 * W + Z(L, H) + (2 * L[16] + 3 * L[17] + 7 * L[18]); if (N <= Q && N <= V) return j(n, v, t.subarray(l, l + p)); if (T(n, v, 1 + (V < Q)), v += 2, V < Q) { Y = y(g, x, 0), q = g, J = y(k, M, 0), K = k; const X = y(H, P, 0); T(n, v, A - 257), T(n, v + 5, G - 1), T(n, v + 10, W - 4), v += 14; for (R = 0; R < W; ++R)T(n, v + 3 * R, H[a[R]]); v += 3 * W; for (let $ = [U, E], _ = 0; _ < 2; ++_) { const tt = $[_]; for (R = 0; R < tt.length; ++R) { var nt = 31 & tt[R]; T(n, v, X[nt]), v += H[nt], nt > 15 && (T(n, v, tt[R] >>> 5 & 127), v += tt[R] >>> 12); } } } else Y = b, q = w, J = z, K = m; for (R = 0; R < c; ++R) if (f[R] > 255) { nt = f[R] >>> 18 & 31; D(n, v, Y[nt + 257]), v += q[nt + 257], nt > 7 && (T(n, v, f[R] >>> 23 & 31), v += e[nt]); const rt = 31 & f[R]; D(n, v, J[rt]), v += K[rt], rt > 3 && (D(n, v, f[R] >>> 5 & 8191), v += o[rt]); } else D(n, v, Y[f[R]]), v += q[f[R]]; return D(n, v, Y[256]), v + q[256]; }; const L = new i([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]); const R = new n(0); const B = function (t, a, f, s, u, c) { const l = t.length; const v = new n(s + l + 5 * (1 + Math.ceil(l / 7e3)) + u); const d = v.subarray(s, v.length - u); let g = 0; if (!a || l < 8) for (var y = 0; y <= l; y += 65535) { const w = y + 65535; w < l ? g = j(d, g, t.subarray(y, w)) : (d[y] = c, g = j(d, g, t.subarray(y, l))); } else { for (var m = L[a - 1], b = m >>> 13, x = 8191 & m, z = (1 << f) - 1, S = new r(32768), k = new r(z + 1), M = Math.ceil(f / 3), C = 2 * M, O = function (n) { return (t[n] ^ t[n + 1] << M ^ t[n + 2] << C) & z; }, T = new i(25e3), D = new r(288), F = new r(32), E = 0, I = 0, Z = (y = 0, 0), B = 0, H = 0; y < l; ++y) { const P = O(y); let W = 32767 & y; let Y = k[P]; if (S[W] = Y, k[P] = W, B <= y) { const q = l - y; if ((E > 7e3 || Z > 24576) && q > 423) { g = G(t, d, 0, T, D, F, I, Z, H, y - H, g), Z = E = I = 0, H = y; for (var J = 0; J < 286; ++J)D[J] = 0; for (J = 0; J < 30; ++J)F[J] = 0; } let K = 2; let N = 0; let Q = x; let V = W - Y & 32767; if (q > 2 && P == O(y - V)) for (let X = Math.min(b, q) - 1, $ = Math.min(32767, y), _ = Math.min(258, q); V <= $ && --Q && W != Y;) { if (t[y + K] == t[y + K - V]) { for (var tt = 0; tt < _ && t[y + tt] == t[y + tt - V]; ++tt);if (tt > K) { if (K = tt, N = V, tt > X) break; const nt = Math.min(V, tt - 2); let rt = 0; for (J = 0; J < nt; ++J) { const it = y - V + J + 32768 & 32767; const et = it - S[it] + 32768 & 32767; et > rt && (rt = et, Y = it); } } }V += (W = Y) - (Y = S[W]) + 32768 & 32767; } if (N) { T[Z++] = 268435456 | h[K] << 18 | p[N]; const ot = 31 & h[K]; const at = 31 & p[N]; I += e[ot] + o[at], ++D[257 + ot], ++F[at], B = y + K, ++E; } else T[Z++] = t[y], ++D[t[y]]; } }g = G(t, d, c, T, D, F, I, Z, H, y - H, g), !c && 7 & g && (g = j(d, g + 1, R)); } return A(v, 0, s + U(g) + u); }; const H = (function () { for (var t = new i(256), n = 0; n < 256; ++n) { for (var r = n, e = 9; --e;)r = (1 & r && 3988292384) ^ r >>> 1; t[n] = r; } return t; }()); const P = function () { let t = 4294967295; return { p(n) { for (var r = t, i = 0; i < n.length; ++i)r = H[255 & r ^ n[i]] ^ r >>> 8; t = r; }, d() { return 4294967295 ^ t; } }; }; const W = function () { let t = 1; let n = 0; return { p(r) { for (var i = t, e = n, o = r.length, a = 0; a != o;) { for (let f = Math.min(a + 5552, o); a < f; ++a)e += i += r[a]; i %= 65521, e %= 65521; }t = i, n = e; }, d() { return (t >>> 8 << 16 | (255 & n) << 8 | n >>> 8) + 2 * ((255 & t) << 23); } }; }; const Y = function (t, n, r, i, e) { return B(t, n.level == null ? 6 : n.level, n.mem == null ? Math.ceil(1.5 * Math.max(8, Math.min(13, Math.log(t.length)))) : 12 + n.mem, r, i, !e); }; const q = function (t, n) { const r = {}; for (var i in t)r[i] = t[i]; for (var i in n)r[i] = n[i]; return r; }; const J = function (t, n, r) { for (let i = t(), e = t.toString(), o = e.slice(e.indexOf('[') + 1, e.lastIndexOf(']')).replace(/ /g, '').split(','), a = 0; a < i.length; ++a) { const f = i[a]; const s = o[a]; if (typeof f === 'function') { n += `;${s}=`; const u = f.toString(); if (f.prototype) if (u.indexOf('[native code]') != -1) { const h = u.indexOf(' ', 8) + 1; n += u.slice(h, u.indexOf('(', h)); } else for (const c in n += u, f.prototype)n += `;${s}.prototype.${c}=${f.prototype[c].toString()}`; else n += u; } else r[s] = f; } return [n, r]; }; const K = []; const N = function (e, o, a, f) { let s; if (!K[a]) { for (var u = '', h = {}, c = e.length - 1, l = 0; l < c; ++l)u = (s = J(e[l], u, h))[0], h = s[1]; K[a] = J(e[c], u, h); } const p = q({}, K[a][1]); return (function (n, r, i, e, o) { const a = t[r] || (t[r] = URL.createObjectURL(new Blob([n], { type: 'text/javascript' }))); const f = new Worker(a); return f.onerror = function (t) { o(t.error, null); }, f.onmessage = function (t) { o(null, t.data); }, f.postMessage(i, e), f; }(`${K[a][0]};onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=${o.toString()}}`, a, p, (function (t) { const e = []; for (const o in t)(t[o] instanceof n || t[o] instanceof r || t[o] instanceof i) && e.push((t[o] = new t[o].constructor(t[o])).buffer); return e; }(p)), f)); }; const Q = function () { return [n, r, i, e, o, a, u, l, x, S, v, y, k, M, C, U, A, O, inflateSync, nt, rt]; }; const V = function () { return [n, r, i, e, o, a, h, p, b, w, z, m, v, L, R, y, T, D, F, E, I, Z, j, G, U, A, B, Y, deflateSync, nt]; }; const X = function () { return [ht, pt, ut, P, H]; }; const $ = function () { return [ct, lt]; }; const _ = function () { return [vt, ut, W]; }; const tt = function () { return [dt]; }; var nt = function (t) { return postMessage(t, [t.buffer]); }; var rt = function (t) { return t && t.size && new n(t.size); }; const it = function (t, r, i, e, o, a) { var f = N(i, e, o, ((t, n) => { f.terminate(), a(t, n); })); return r.consume || (t = new n(t)), f.postMessage([t, r], [t.buffer]), function () { f.terminate(); }; }; const et = function (t) { return t.ondata = function (t, n) { return postMessage([t, n], [t.buffer]); }, function (n) { return t.push(n.data[0], n.data[1]); }; }; const ot = function (t, n, r, i, e) { let o; var a = N(t, i, e, ((t, r) => { t ? (a.terminate(), n.ondata.call(n, t)) : (r[1] && a.terminate(), n.ondata.call(n, t, r[0], r[1])); })); a.postMessage(r), n.push = function (t, r) { if (o) throw 'stream finished'; if (!n.ondata) throw 'no stream handler'; a.postMessage([t, o = r], [t.buffer]); }, n.terminate = function () { a.terminate(); }; }; const at = function (t, n) { return t[n] | t[n + 1] << 8; }; const ft = function (t, n) { return (t[n] | t[n + 1] << 8 | t[n + 2] << 16) + 2 * (t[n + 3] << 23); }; const st = function (t, n) { return ft(t, n) | 4294967296 * ft(t, n); }; var ut = function (t, n, r) { for (;r; ++n)t[n] = r, r >>>= 8; }; var ht = function (t, n) { const r = n.filename; if (t[0] = 31, t[1] = 139, t[2] = 8, t[8] = n.level < 2 ? 4 : n.level == 9 ? 2 : 0, t[9] = 3, n.mtime != 0 && ut(t, 4, Math.floor(new Date(n.mtime || Date.now()) / 1e3)), r) { t[3] = 8; for (let i = 0; i <= r.length; ++i)t[i + 10] = r.charCodeAt(i); } }; var ct = function (t) { if (t[0] != 31 || t[1] != 139 || t[2] != 8) throw 'invalid gzip data'; const n = t[3]; let r = 10; 4 & n && (r += t[10] | 2 + (t[11] << 8)); for (let i = (n >> 3 & 1) + (n >> 4 & 1); i > 0; i -= !t[r++]);return r + (2 & n); }; var lt = function (t) { const n = t.length; return (t[n - 4] | t[n - 3] << 8 | t[n - 2] << 16) + 2 * (t[n - 1] << 23); }; var pt = function (t) { return 10 + (t.filename && t.filename.length + 1 || 0); }; var vt = function (t, n) { const r = n.level; const i = r == 0 ? 0 : r < 6 ? 1 : r == 9 ? 3 : 2; t[0] = 120, t[1] = i << 6 | (i ? 32 - 2 * i : 1); }; var dt = function (t) { if ((15 & t[0]) != 8 || t[0] >>> 4 > 7 || (t[0] << 8 | t[1]) % 31) throw 'invalid zlib data'; if (32 & t[1]) throw 'invalid zlib data: preset dictionaries not supported'; }; function gt(t, n) { return n || typeof t !== 'function' || (n = t, t = {}), this.ondata = n, t; } const yt = (function () { function t(t, n) { n || typeof t !== 'function' || (n = t, t = {}), this.ondata = n, this.o = t || {}; } return t.prototype.p = function (t, n) { this.ondata(Y(t, this.o, 0, 0, !n), n); }, t.prototype.push = function (t, n) { if (this.d) throw 'stream finished'; if (!this.ondata) throw 'no stream handler'; this.d = n, this.p(t, n || !1); }, t; }()); export { yt as Deflate }; const wt = (function () { return function (t, n) { ot([V, function () { return [et, yt]; }], this, gt.call(this, t, n), ((t) => { const n = new yt(t.data); onmessage = et(n); }), 6); }; }()); export { wt as AsyncDeflate }; export function deflate(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return it(t, n, [V], ((t) => { return nt(deflateSync(t.data[0], t.data[1])); }), 0, r); } export function deflateSync(t, n) { return void 0 === n && (n = {}), Y(t, n, 0, 0); } const mt = (function () { function t(t) { this.s = {}, this.p = new n(0), this.ondata = t; } return t.prototype.e = function (t) { if (this.d) throw 'stream finished'; if (!this.ondata) throw 'no stream handler'; const r = this.p.length; const i = new n(r + t.length); i.set(this.p), i.set(t, r), this.p = i; }, t.prototype.c = function (t) { this.d = this.s.i = t || !1; const n = this.s.b; const r = O(this.p, this.o, this.s); this.ondata(A(r, n, this.s.b), this.d), this.o = A(r, this.s.b - 32768), this.s.b = this.o.length, this.p = A(this.p, this.s.p / 8 >> 0), this.s.p &= 7; }, t.prototype.push = function (t, n) { this.e(t), this.c(n); }, t; }()); export { mt as Inflate }; const bt = (function () { return function (t) { this.ondata = t, ot([Q, function () { return [et, mt]; }], this, 0, (() => { const t = new mt(); onmessage = et(t); }), 7); }; }()); export { bt as AsyncInflate }; export function inflate(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return it(t, n, [Q], ((t) => { return nt(inflateSync(t.data[0], rt(t.data[1]))); }), 1, r); } export function inflateSync(t, n) { return O(t, n); } const xt = (function () { function t(t, n) { this.c = P(), this.l = 0, this.v = 1, yt.call(this, t, n); } return t.prototype.push = function (t, n) { yt.prototype.push.call(this, t, n); }, t.prototype.p = function (t, n) { this.c.p(t), this.l += t.length; const r = Y(t, this.o, this.v && pt(this.o), n && 8, !n); this.v && (ht(r, this.o), this.v = 0), n && (ut(r, r.length - 8, this.c.d()), ut(r, r.length - 4, this.l)), this.ondata(r, n); }, t; }()); export { xt as Gzip }; const zt = (function () { return function (t, n) { ot([V, X, function () { return [et, yt, xt]; }], this, gt.call(this, t, n), ((t) => { const n = new xt(t.data); onmessage = et(n); }), 8); }; }()); export { zt as AsyncGzip }; export function gzip(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return it(t, n, [V, X, function () { return [gzipSync]; }], ((t) => { return nt(gzipSync(t.data[0], t.data[1])); }), 2, r); } export function gzipSync(t, n) { void 0 === n && (n = {}); const r = P(); const i = t.length; r.p(t); const e = Y(t, n, pt(n), 8); const o = e.length; return ht(e, n), ut(e, o - 8, r.d()), ut(e, o - 4, i), e; } const St = (function () { function t(t) { this.v = 1, mt.call(this, t); } return t.prototype.push = function (t, n) { if (mt.prototype.e.call(this, t), this.v) { const r = ct(this.p); if (r >= this.p.length && !n) return; this.p = this.p.subarray(r), this.v = 0; } if (n) { if (this.p.length < 8) throw 'invalid gzip stream'; this.p = this.p.subarray(0, -8); }mt.prototype.c.call(this, n); }, t; }()); export { St as Gunzip }; const kt = (function () { return function (t) { this.ondata = t, ot([Q, $, function () { return [et, mt, St]; }], this, 0, (() => { const t = new St(); onmessage = et(t); }), 9); }; }()); export { kt as AsyncGunzip }; export function gunzip(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return it(t, n, [Q, $, function () { return [gunzipSync]; }], ((t) => { return nt(gunzipSync(t.data[0])); }), 3, r); } export function gunzipSync(t, r) { return O(t.subarray(ct(t), -8), r || new n(lt(t))); } const Mt = (function () { function t(t, n) { this.c = W(), this.v = 1, yt.call(this, t, n); } return t.prototype.push = function (t, n) { yt.prototype.push.call(this, t, n); }, t.prototype.p = function (t, n) { this.c.p(t); const r = Y(t, this.o, this.v && 2, n && 4, !n); this.v && (vt(r, this.o), this.v = 0), n && ut(r, r.length - 4, this.c.d()), this.ondata(r, n); }, t; }()); export { Mt as Zlib }; const Ct = (function () { return function (t, n) { ot([V, _, function () { return [et, yt, Mt]; }], this, gt.call(this, t, n), ((t) => { const n = new Mt(t.data); onmessage = et(n); }), 10); }; }()); export { Ct as AsyncZlib }; export function zlib(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return it(t, n, [V, _, function () { return [zlibSync]; }], ((t) => { return nt(zlibSync(t.data[0], t.data[1])); }), 4, r); } export function zlibSync(t, n) { void 0 === n && (n = {}); const r = W(); r.p(t); const i = Y(t, n, 2, 4); return vt(i, n), ut(i, i.length - 4, r.d()), i; } const Ut = (function () { function t(t) { this.v = 1, mt.call(this, t); } return t.prototype.push = function (t, n) { if (mt.prototype.e.call(this, t), this.v) { if (this.p.length < 2 && !n) return; this.p = this.p.subarray(2), this.v = 0; } if (n) { if (this.p.length < 4) throw 'invalid zlib stream'; this.p = this.p.subarray(0, -4); }mt.prototype.c.call(this, n); }, t; }()); export { Ut as Unzlib }; const At = (function () { return function (t) { this.ondata = t, ot([Q, tt, function () { return [et, mt, Ut]; }], this, 0, (() => { const t = new Ut(); onmessage = et(t); }), 11); }; }()); export { At as AsyncUnzlib }; export function unzlib(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return it(t, n, [Q, tt, function () { return [unzlibSync]; }], ((t) => { return nt(unzlibSync(t.data[0], rt(t.data[1]))); }), 5, r); } export function unzlibSync(t, n) { return O((dt(t), t.subarray(2, -4)), n); } export { gzip as compress, zt as AsyncCompress }; export { gzipSync as compressSync, xt as Compress }; const Ot = (function () { function t(t) { this.G = St, this.I = mt, this.Z = Ut, this.ondata = t; } return t.prototype.push = function (t, r) { if (!this.ondata) throw 'no stream handler'; if (this.s) this.s.push(t, r); else { if (this.p && this.p.length) { const i = new n(this.p.length + t.length); i.set(this.p), i.set(t, this.p.length); } else this.p = t; if (this.p.length > 2) { const e = this; const o = function () { e.ondata.apply(e, arguments); }; this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(o) : (15 & this.p[0]) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(o) : new this.Z(o), this.s.push(this.p, r), this.p = null; } } }, t; }()); export { Ot as Decompress }; const Tt = (function () { function t(t) { this.G = kt, this.I = bt, this.Z = At, this.ondata = t; } return t.prototype.push = function (t, n) { Ot.prototype.push.call(this, t, n); }, t; }()); export { Tt as AsyncDecompress }; export function decompress(t, n, r) { if (r || (r = n, n = {}), typeof r !== 'function') throw 'no callback'; return t[0] == 31 && t[1] == 139 && t[2] == 8 ? gunzip(t, n, r) : (15 & t[0]) != 8 || t[0] >> 4 > 7 || (t[0] << 8 | t[1]) % 31 ? inflate(t, n, r) : unzlib(t, n, r); } export function decompressSync(t, n) { return t[0] == 31 && t[1] == 139 && t[2] == 8 ? gunzipSync(t, n) : (15 & t[0]) != 8 || t[0] >> 4 > 7 || (t[0] << 8 | t[1]) % 31 ? inflateSync(t, n) : unzlibSync(t, n); } var Dt = function (t, r, i, e) { for (const o in t) { const a = t[o]; const f = r + o; a instanceof n ? i[f] = [a, e] : Array.isArray(a) ? i[f] = [a[0], q(e, a[1])] : Dt(a, `${f}/`, i, e); } }; const Ft = typeof TextEncoder !== 'undefined' && new TextEncoder(); const Et = typeof TextDecoder !== 'undefined' && new TextDecoder(); let It = 0; try { Et.decode(R, { stream: !0 }), It = 1; } catch (t) {} const Zt = function (t) { for (let n = '', r = 0; ;) { let i = t[r++]; const e = (i > 127) + (i > 223) + (i > 239); if (r + e > t.length) return [n, t.slice(r - 1)]; e ? e == 3 ? (i = ((15 & i) << 18 | (63 & t[r++]) << 12 | (63 & t[r++]) << 6 | 63 & t[r++]) - 65536, n += String.fromCharCode(55296 | i >> 10, 56320 | 1023 & i)) : n += 1 & e ? String.fromCharCode((31 & i) << 6 | 63 & t[r++]) : String.fromCharCode((15 & i) << 12 | (63 & t[r++]) << 6 | 63 & t[r++]) : n += String.fromCharCode(i); } }; const jt = (function () { function t(t) { this.ondata = t, It ? this.t = new TextDecoder() : this.p = R; } return t.prototype.push = function (t, r) { if (!this.ondata) throw 'no callback'; if (r || (r = !1), this.t) return this.ondata(this.t.decode(t, { stream: !r }), r); const i = new n(this.p.length + t.length); i.set(this.p), i.set(t, this.p.length); const e = Zt(i); const o = e[0]; const a = e[1]; if (r && a.length) throw 'invalid utf-8 data'; this.p = a, this.ondata(o, r); }, t; }()); export { jt as DecodeUTF8 }; const Gt = (function () { function t(t) { this.ondata = t; } return t.prototype.push = function (t, n) { if (!this.ondata) throw 'no callback'; this.ondata(strToU8(t), n || !1); }, t; }()); export { Gt as EncodeUTF8 }; export function strToU8(t, r) { if (r) { for (var i = new n(t.length), e = 0; e < t.length; ++e)i[e] = t.charCodeAt(e); return i; } if (Ft) return Ft.encode(t); const o = t.length; let a = new n(t.length + (t.length >> 1)); let f = 0; const s = function (t) { a[f++] = t; }; for (e = 0; e < o; ++e) { if (f + 5 > a.length) { const u = new n(f + 8 + (o - e << 1)); u.set(a), a = u; } let h = t.charCodeAt(e); h < 128 || r ? s(h) : h < 2048 ? (s(192 | h >>> 6), s(128 | 63 & h)) : h > 55295 && h < 57344 ? (s(240 | (h = 65536 + (1047552 & h) | 1023 & t.charCodeAt(++e)) >>> 18), s(128 | h >>> 12 & 63), s(128 | h >>> 6 & 63), s(128 | 63 & h)) : (s(224 | h >>> 12), s(128 | h >>> 6 & 63), s(128 | 63 & h)); } return A(a, 0, f); } export function strFromU8(t, n) { if (n) { for (var r = '', i = 0; i < t.length; i += 16384)r += String.fromCharCode.apply(null, t.subarray(i, i + 16384)); return r; } if (Et) return Et.decode(t); const e = Zt(t); const o = e[0]; if (e[1].length) throw 'invalid utf-8 data'; return o; } const Lt = function (t) { return t == 1 ? 3 : t < 6 ? 2 : t == 9 ? 1 : 0; }; const Rt = function (t, n) { return n + 30 + at(t, n + 26) + at(t, n + 28); }; const Bt = function (t, n, r) { const i = at(t, n + 28); const e = strFromU8(t.subarray(n + 46, n + 46 + i), !(2048 & at(t, n + 8))); const o = n + 46 + i; const a = ft(t, n + 20); const f = r && a == 4294967295 ? Ht(t, o) : [a, ft(t, n + 24), ft(t, n + 42)]; const s = f[0]; const u = f[1]; const h = f[2]; return [at(t, n + 10), s, u, e, o + at(t, n + 30) + at(t, n + 32), h]; }; var Ht = function (t, n) { for (;at(t, n) != 1; n += 4 + at(t, n + 2));return [st(t, n + 12), st(t, n + 4), st(t, n + 20)]; }; const Pt = function (t, n, r, i, e, o, a) { const f = i.length; ut(t, n, a != null ? 33639248 : 67324752), n += 4, a != null && (t[n++] = 20, t[n++] = r.os), t[n] = 20, n += 2, t[n++] = r.flag << 1 | (o == null && 8), t[n++] = e && 8, t[n++] = 255 & r.compression, t[n++] = r.compression >> 8; const s = new Date(r.mtime == null ? Date.now() : r.mtime); const u = s.getFullYear() - 1980; if (u < 0 || u > 119) throw 'date not in range 1980-2099'; return ut(t, n, 2 * (u << 24) | s.getMonth() + 1 << 21 | s.getDate() << 16 | s.getHours() << 11 | s.getMinutes() << 5 | s.getSeconds() >>> 1), n += 4, o != null && (ut(t, n, r.crc), ut(t, n + 4, o), ut(t, n + 8, r.size)), ut(t, n + 12, f), n += 16, a != null && (ut(t, n + 6, r.attrs), ut(t, n + 10, a), n += 14), t.set(i, n), n + f; }; const Wt = function (t, n, r, i, e) { ut(t, n, 101010256), ut(t, n + 8, r), ut(t, n + 10, r), ut(t, n + 12, i), ut(t, n + 16, e); }; const Yt = (function () { function t(t) { this.filename = t, this.c = P(), this.size = 0, this.compression = 0; } return t.prototype.process = function (t, n) { this.ondata(null, t, n); }, t.prototype.push = function (t, n) { if (!this.ondata) throw 'no callback - add to ZIP archive before pushing'; this.c.p(t), this.size += t.length, n && (this.crc = this.c.d()), this.process(t, n || !1); }, t; }()); export { Yt as ZipPassThrough }; const qt = (function () { function t(t, n) { const r = this; void 0 === n && (n = {}), Yt.call(this, t), this.d = new yt(n, (((t, n) => { r.ondata(null, t, n); }))), this.compression = 8, this.flag = Lt(n.level); } return t.prototype.process = function (t, n) { try { this.d.push(t, n); } catch (t) { this.ondata(t, null, n); } }, t.prototype.push = function (t, n) { Yt.prototype.push.call(this, t, n); }, t; }()); export { qt as ZipDeflate }; const Jt = (function () { function t(t, n) { const r = this; void 0 === n && (n = {}), Yt.call(this, t), this.d = new wt(n, (((t, n, i) => { r.ondata(t, n, i); }))), this.compression = 8, this.flag = Lt(n.level), this.terminate = this.d.terminate; } return t.prototype.process = function (t, n) { this.d.push(t, n); }, t.prototype.push = function (t, n) { Yt.prototype.push.call(this, t, n); }, t; }()); export { Jt as AsyncZipDeflate }; const Kt = (function () {
  function t(t) { this.ondata = t, this.u = [], this.d = 1; } return t.prototype.add = function (t) {
    const r = this; if (2 & this.d) throw 'stream finished'; const i = strToU8(t.filename); const e = i.length; const o = e != t.filename.length; const a = e + 30; if (e > 65535) throw 'filename too long'; const f = new n(a); Pt(f, 0, t, i, o); let s = [f]; const u = function () { for (let t = 0, n = s; t < n.length; t++) { const i = n[t]; r.ondata(null, i, !1); }s = []; }; let h = this.d; this.d = 0; const c = this.u.length; const l = q(t, {
      f: i, u: o, t() { t.terminate && t.terminate(); }, r() { if (u(), h) { const t = r.u[c + 1]; t ? t.r() : r.d = 1; }h = 1; },
    }); let p = 0; t.ondata = function (i, e, o) { i ? (r.ondata(i, e, o), r.terminate()) : (p += e.length, s.push(e), o ? (s.push(function (t, r) { const i = new n(16); return ut(i, 0, 134695760), ut(i, 4, t.crc), ut(i, 8, r), ut(i, 12, t.size), i; }(t, p)), l.c = p, l.b = a + p + 16, l.crc = t.crc, l.size = t.size, h && l.r(), h = 1) : h && u()); }, this.u.push(l);
  }, t.prototype.end = function () { const t = this; if (2 & this.d) { if (1 & this.d) throw 'stream finishing'; throw 'stream finished'; } this.d ? this.e() : this.u.push({ r() { 1 & t.d && (t.u.splice(-1, 1), t.e()); }, t() {} }), this.d = 3; }, t.prototype.e = function () { for (var t = 0, r = 0, i = 0, e = 0, o = this.u; e < o.length; e++) { i += 46 + (u = o[e]).f.length; } for (var a = new n(i + 22), f = 0, s = this.u; f < s.length; f++) { var u = s[f]; Pt(a, t, u, u.f, u.u, u.c, r), t += 46 + u.f.length, r += u.b; }Wt(a, t, this.u.length, i, r), this.ondata(null, a, !0), this.d = 2; }, t.prototype.terminate = function () { for (let t = 0, n = this.u; t < n.length; t++) { n[t].t(); } this.d = 2; }, t;
}()); export { Kt as Zip }; export function zip(t, r, i) {
  if (i || (i = r, r = {}), typeof i !== 'function') throw 'no callback'; const e = {}; Dt(t, '', e, r); const o = Object.keys(e); let a = o.length; let f = 0; let s = 0; const u = a; const h = new Array(a); const c = []; const l = function () { for (let t = 0; t < c.length; ++t)c[t](); }; const p = function () { const t = new n(s + 22); const r = f; const e = s - f; s = 0; for (let o = 0; o < u; ++o) { const a = h[o]; try { const c = a.c.length; Pt(t, s, a, a.f, a.u, c); const l = s + 30 + a.f.length; t.set(a.c, l), Pt(t, f, a, a.f, a.u, c, s), f += 46 + a.f.length, s = l + c; } catch (t) { return i(t, null); } }Wt(t, f, h.length, e, r), i(null, t); }; a || p(); for (let v = function (t) {
      const n = o[t]; const r = e[n]; const u = r[0]; const v = r[1]; const d = P(); const g = u.length; d.p(u); const y = strToU8(n); const w = y.length; const m = v.level == 0 ? 0 : 8; const b = function (r, e) {
        if (r)l(), i(r, null); else {
          const o = e.length; h[t] = q(v, {
            size: g, crc: d.d(), c: e, f: y, u: w != n.length, compression: m,
          }), f += 30 + w + o, s += 76 + 2 * w + o, --a || p();
        }
      }; if (w > 65535 && b('filename too long', null), m) if (g < 16e4) try { b(null, deflateSync(u, v)); } catch (t) { b(t, null); } else c.push(deflate(u, v, b)); else b(null, u);
    }, d = 0; d < u; ++d)v(d); return l;
} export function zipSync(t, r) {
  void 0 === r && (r = {}); const i = {}; const e = []; Dt(t, '', i, r); let o = 0; let a = 0; for (const f in i) {
    const s = i[f]; const u = s[0]; const h = s[1]; const c = h.level == 0 ? 0 : 8; const l = (b = strToU8(f)).length; if (l > 65535) throw 'filename too long'; const p = c ? deflateSync(u, h) : u; const v = p.length; const d = P(); d.p(u), e.push(q(h, {
      size: u.length, crc: d.d(), c: p, f: b, u: l != f.length, o, compression: c,
    })), o += 30 + l + v, a += 76 + 2 * l + v;
  } for (var g = new n(a + 22), y = o, w = a - o, m = 0; m < e.length; ++m) { var b = e[m]; Pt(g, b.o, b, b.f, b.u, b.c.length), g.set(b.c, b.o + 30 + b.f.length), Pt(g, o, b, b.f, b.u, b.c.length, b.o), o += 46 + b.f.length; } return Wt(g, o, e.length, w, y), g;
} const Nt = (function () { function t() {} return t.prototype.push = function (t, n) { this.ondata(null, t, n); }, t.compression = 0, t; }()); export { Nt as UnzipPassThrough }; const Qt = (function () { function t() { const t = this; this.i = new mt((((n, r) => { t.ondata(null, n, r); }))); } return t.prototype.push = function (t, n) { try { this.i.push(t, n); } catch (r) { this.ondata(r, t, n); } }, t.compression = 8, t; }()); export { Qt as UnzipInflate }; const Vt = (function () { function t() { const t = this; this.i = new bt((((n, r, i) => { t.ondata(n, r, i); }))), this.terminate = this.i.terminate; } return t.prototype.push = function (t, n) { this.i.push(A(t, 0), n); }, t.compression = 8, t; }()); export { Vt as AsyncUnzipInflate }; const Xt = (function () { function t(t) { this.onfile = t, this.k = [], this.o = { 0: Nt }, this.p = R; } return t.prototype.push = function (t, r) { const i = this; const e = this.c == -1 && this.d; if (this.c && !e) { const o = Math.min(this.c, t.length); const a = t.subarray(0, o); this.c -= o, this.d ? this.d.push(a, !this.c) : this.k[0].push([a, !this.c]), t = t.subarray(o); } if (e || !this.c) { let f = 0; let s = 0; let u = void 0; let h = void 0; const c = t.length; const l = this.p.length; const p = c + l; if (c)l ? ((h = new Uint8Array(p)).set(this.p), h.set(t, this.p.length)) : h = t; else { if (!l) return; h = this.p; } this.p = R; for (var v = function () { if (ft(h, s) == 67324752) { f = 1, e && e.push(R, !0), d.d = null, d.c = 0; const t = at(h, s + 6); const r = at(h, s + 8); const o = 2048 & t; const a = 8 & t; const c = at(h, s + 26); const l = at(h, s + 28); if (p > s + 30 + c + l) { const v = []; d.k.unshift(v), f = 2, u = s; let g = ft(h, s + 18); const y = strFromU8(h.subarray(s + 30, s += 30 + c), !o); if (a && (g = -1), g == 4294967295 && (g = Ht(h, s)[0]), !d.o[r]) return d.onfile(`unknown compression type ${r}`, y, null), 'break'; d.c = g; var w = { start() { if (!w.ondata) throw 'no callback'; if (g) { const t = new i.o[r](); t.ondata = function (t, n, r) { w.ondata(t, n, r); }; for (let e = 0, o = v; e < o.length; e++) { const a = o[e]; const f = a[0]; const s = a[1]; t.push(f, s); }i.k[0] == v && (i.d = t); } else w.ondata(null, new n(0), !0); }, terminate() { i.k[0] == v && i.d.terminate && i.d.terminate(); } }; d.onfile(null, y, w), s += l; } return 'break'; } }, d = this; s < p; ++s) { if (v() === 'break') break; } if (e && e.push(f == 2 ? h.subarray(0, u - 12 - (ft(h, u - 12) == 134695760 && 4)) : h.subarray(0, s), !!f), 2 & f) return this.push(h.subarray(s), r); if (1 & f && (this.p = h), r && (f || this.c)) throw 'invalid zip file'; } }, t.prototype.register = function (t) { this.o[t.compression] = t; }, t; }()); export { Xt as Unzip }; export function unzip(t, r) { if (typeof r !== 'function') throw 'no callback'; for (var i = [], e = function () { for (let t = 0; t < i.length; ++t)i[t](); }, o = {}, a = t.length - 22; ft(t, a) != 101010256; --a) if (!a || t.length - a > 65558) return void r('invalid zip file', null); let f = at(t, a + 8); f || r(null, {}); let s = f; let u = ft(t, a + 16); const h = u == 4294967295; if (h) { if (a = ft(t, a - 12), ft(t, a) != 101075792) return void r('invalid zip file', null); s = f = ft(t, a + 32), u = ft(t, a + 48); } for (let c = function (a) { const s = Bt(t, u, h); const c = s[0]; const l = s[1]; const p = s[2]; const v = s[3]; const d = s[4]; const g = s[5]; const y = Rt(t, g); u = d; const w = function (t, n) { t ? (e(), r(t, null)) : (o[v] = n, --f || r(null, o)); }; if (c) if (c == 8) { const m = t.subarray(y, y + l); if (l < 32e4) try { w(null, inflateSync(m, new n(p))); } catch (t) { w(t, null); } else i.push(inflate(m, { size: p }, w)); } else w(`unknown compression type ${c}`, null); else w(null, A(t, y, y + l)); }, l = 0; l < s; ++l)c(); return e; } export function unzipSync(t) { for (var r = {}, i = t.length - 22; ft(t, i) != 101010256; --i) if (!i || t.length - i > 65558) throw 'invalid zip file'; let e = at(t, i + 8); if (!e) return {}; let o = ft(t, i + 16); const a = o == 4294967295; if (a) { if (i = ft(t, i - 12), ft(t, i) != 101075792) throw 'invalid zip file'; e = ft(t, i + 32), o = ft(t, i + 48); } for (let f = 0; f < e; ++f) { const s = Bt(t, o, a); const u = s[0]; const h = s[1]; const c = s[2]; const l = s[3]; const p = s[4]; const v = s[5]; const d = Rt(t, v); if (o = p, u) { if (u != 8) throw `unknown compression type ${u}`; r[l] = inflateSync(t.subarray(d, d + h), new n(c)); } else r[l] = A(t, d, d + h); } return r; }
